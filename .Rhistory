#IEM计算&生成基本代码
x<-read.csv("E:/快决测/工具/IEM/Equity score.csv",header = T)
x[x==0]<-NA #把打分0的定义为NA
y<-(1/apply(-x[,2:ncol(x)],1,rank,na.last="keep"))^1.35#降序排序，若升序则改为x,多用降序
z<-t(y)
z[is.na(z)]<-0
kk=matrix(nrow=nrow(z),ncol=ncol(z))
zz=matrix(nrow=nrow(z),ncol=ncol(z))
for (i in 1:nrow(z)) {
for (j in 1:ncol(z)){
kk[i,j]<-z[i,j]/sum(z[i,],na.rm = T)*100 #用均值去算的话扩大100倍
kk[is.nan(kk)]<-0 #把无意义的数定义为0，如0/0会显示NaN
cnames=paste("b5n0",1:ncol(z),sep="")
colnames(kk)<-cnames
zz[i,j]<-paste("dw $","b5n0",j,"=",kk[i,j],",",sep="")#定义变量名，根据自己喜好
}
}
head(zz)
zz<-cbind(x[,1],zz)
kk<-cbind(x[,1],kk)#算出的数
cc<-as.data.frame(zz)
class(cc)
dd<-do.call(paste,cc[,2:ncol(cc)])#第二个参数要求串列或数据框，故转换了cc的数据类型
ee<-paste("IF $IOBS/",cc[,1],",THEN,",dd,"ENDIF,",sep="")
final<-cbind(kk,ee)
write.table(final,"E:/快决测/工具/IEM/D_IEM.csv",sep=",",row.names = FALSE, col.names = F)
#IEM计算&生成基本代码
x<-read.csv("E:/QD/tools/IEM/Equity score.csv",header = T)
x[x==0]<-NA #把打分0的定义为NA
y<-(1/apply(-x[,2:ncol(x)],1,rank,na.last="keep"))^1.35#降序排序，若升序则改为x,多用降序
z<-t(y)
z[is.na(z)]<-0
kk=matrix(nrow=nrow(z),ncol=ncol(z))
zz=matrix(nrow=nrow(z),ncol=ncol(z))
for (i in 1:nrow(z)) {
for (j in 1:ncol(z)){
kk[i,j]<-z[i,j]/sum(z[i,],na.rm = T)*100 #用均值去算的话扩大100倍
kk[is.nan(kk)]<-0 #把无意义的数定义为0，如0/0会显示NaN
cnames=paste("b5n0",1:ncol(z),sep="")
colnames(kk)<-cnames
zz[i,j]<-paste("dw $","b5n0",j,"=",kk[i,j],",",sep="")#定义变量名，根据自己喜好
}
}
head(zz)
zz<-cbind(x[,1],zz)
kk<-cbind(x[,1],kk)#算出的数
cc<-as.data.frame(zz)
class(cc)
dd<-do.call(paste,cc[,2:ncol(cc)])#第二个参数要求串列或数据框，故转换了cc的数据类型
ee<-paste("IF $IOBS/",cc[,1],",THEN,",dd,"ENDIF,",sep="")
final<-cbind(kk,ee)
write.table(final,"E:/快决测/工具/IEM/D_IEM.csv",sep=",",row.names = FALSE, col.names = F)
#IEM计算&生成基本代码
setwd("E:/QD/tools/IEM")
x<-read.csv("Equity score.csv",header = T)
x[x==0]<-NA #把打分0的定义为NA
y<-(1/apply(-x[,2:ncol(x)],1,rank,na.last="keep"))^1.35#降序排序，若升序则改为x,多用降序
z<-t(y)
z[is.na(z)]<-0
kk=matrix(nrow=nrow(z),ncol=ncol(z))
zz=matrix(nrow=nrow(z),ncol=ncol(z))
head(zz)
zz<-cbind(x[,1],zz)
cc<-as.data.frame(zz)
class(cc)
dd<-do.call(paste,cc[,2:ncol(cc)])#第二个参数要求串列或数据框，故转换了cc的数据类型
kk<-cbind(x[,1],kk)#算出的数
for (i in 1:nrow(z)) {
for (j in 1:ncol(z)){
kk[i,j]<-z[i,j]/sum(z[i,],na.rm = T)*100 #用均值去算的话扩大100倍
kk[is.nan(kk)]<-0 #把无意义的数定义为0，如0/0会显示NaN
cnames=paste("b5n0",1:ncol(z),sep="")
colnames(kk)<-cnames
zz[i,j]<-paste("dw $","b5n0",j,"=",kk[i,j],",",sep="")#定义变量名，根据自己喜好
}
}
ee<-paste("IF $IOBS/",cc[,1],",THEN,",dd,"ENDIF,",sep="")
#IEM计算&生成基本代码
setwd("E:/QD/tools/IEM")
x<-read.csv("Equity score.csv",header = T)
x[x==0]<-NA #把打分0的定义为NA
y<-(1/apply(-x[,2:ncol(x)],1,rank,na.last="keep"))^1.35#降序排序，若升序则改为x,多用降序
z<-t(y)
z[is.na(z)]<-0
kk=matrix(nrow=nrow(z),ncol=ncol(z))
zz=matrix(nrow=nrow(z),ncol=ncol(z))
for (i in 1:nrow(z)) {
for (j in 1:ncol(z)){
kk[i,j]<-z[i,j]/sum(z[i,],na.rm = T)*100 #用均值去算的话扩大100倍
kk[is.nan(kk)]<-0 #把无意义的数定义为0，如0/0会显示NaN
cnames=paste("b5n0",1:ncol(z),sep="")
colnames(kk)<-cnames
zz[i,j]<-paste("dw $","b5n0",j,"=",kk[i,j],",",sep="")#定义变量名，根据自己喜好
}
}
head(zz)
zz<-cbind(x[,1],zz)
kk<-cbind(x[,1],kk)#算出的数
cc<-as.data.frame(zz)
class(cc)
dd<-do.call(paste,cc[,2:ncol(cc)])#第二个参数要求串列或数据框，故转换了cc的数据类型
ee<-paste("IF $IOBS/",cc[,1],",THEN,",dd,"ENDIF,",sep="")
final<-cbind(kk,ee)
write.table(final,"E:/QD/tools/IEM/D_IEM.csv",sep=",",row.names = FALSE, col.names = F)
#IEM计算&生成基本代码
setwd("E:/QD/tools/IEM")
x<-read.csv("Equity score.csv",header = T)
x[x==0]<-NA #把打分0的定义为NA
y<-(1/apply(-x[,2:ncol(x)],1,rank,na.last="keep"))^1.35#降序排序，若升序则改为x,多用降序
z<-t(y)
z[is.na(z)]<-0
kk=matrix(nrow=nrow(z),ncol=ncol(z))
zz=matrix(nrow=nrow(z),ncol=ncol(z))
for (i in 1:nrow(z)) {
for (j in 1:ncol(z)){
kk[i,j]<-z[i,j]/sum(z[i,],na.rm = T)*100 #用均值去算的话扩大100倍
kk[is.nan(kk)]<-0 #把无意义的数定义为0，如0/0会显示NaN
cnames=paste("b5n0",1:ncol(z),sep="")
colnames(kk)<-cnames
zz[i,j]<-paste("dw $","b5n0",j,"=",kk[i,j],",",sep="")#定义变量名，根据自己喜好
}
}
head(zz)
zz<-cbind(x[,1],zz)
kk<-cbind(x[,1],kk)#算出的数
cc<-as.data.frame(zz)
class(cc)
dd<-do.call(paste,cc[,2:ncol(cc)])#第二个参数要求串列或数据框，故转换了cc的数据类型
ee<-paste("IF $IOBS/",cc[,1],",THEN,",dd,"ENDIF,",sep="")
final<-cbind(kk,ee)
write.table(final,"D_IEM.csv",sep=",",row.names = FALSE, col.names = F)
#设置工作目录
setwd("E:/QD/tools/Linear Solver")
library(Rglpk)
#读取数据以及条件
all<-read.csv("row_data.csv",header=T)
row_data<-all[,2:ncol(all)]
quota_limit<-read.csv("quota_limit.csv",header=T)
#计算列变量个数
rd_col<-ncol(row_data)
#分组统计并生成变量x
data<-aggregate(row_data[,1],row_data[,1:rd_col],length)
#重命名计算结果的列名
names(data)[rd_col+1]<-"row"
#生成增加列变量x，值为x1...xi
for(i in 1:length(data$row)){
data$x[i]<-paste("x",i,sep="")
}
#计算条件个数
n<-nrow(quota_limit)
#每个条件对应的xi变量
for(i in 1:n){
assign(paste("con",i,sep=""),eval(parse(text=paste(quota_limit[i,1]))))
}
#做出m*n的矩阵（m代表所有条件的数量，n代表可变单元格数量）
aa<-(paste("x",seq(1:nrow(data)),sep=""))
bb<-matrix(c(rep(aa,n)),nrow=n,byrow=T)
#自建函数
rsl<-function(data){
obj<-c(rep(1,nrow(data)))
for(i in 1:n){
bb[i,which(bb[i,] %in% eval(parse(text=paste("con",i,sep=""))))]<-1 #将coni中有的元素批量替换为1
bb[i,which(regexpr("x",bb[i,])>0)]<-0 #将包含"x"的单元格批量替换为0
}
cc<-diag(1,nrow=nrow(data))#可变单元格的系数矩阵
mat<-rbind(bb,cc)#完整的系数矩阵
dir<-c(rep("<=",nrow(data)+n))#符号
rhs<-t(append(quota_limit$quota,data$row))#转置所有限制配额(append:追加数据，这里不能用rbind)
ls<-Rglpk_solve_LP(obj,mat,dir,rhs,max=T,types = "I")#求解
data$combine<-do.call(paste,c(data[,1:(ncol(data)-2)],sep=""))#组合编码
result<-cbind(data,ls$solution)
names(result)[ncol(result)]<-"solution"
return(result)
}
result<-rsl(data)#规划结果
#下面对规划结果挑选样本
combine<-do.call(paste,c(all[,2:ncol(all)],sep=""))
#自定义函数：条件计数，只统计到目前记录已有的，不是全部
cf<-function(array){
accum<- c()
n<-rep(1,length(array))#由于只能累加运算，故增加全部为1的n变量变相累计
temp<-tapply(n,array,cumsum)#对array累加
a<-sort(array[!duplicated(array)])#去重并顺序排列
i<-length(a)
for(i in 1:i){
accum[which(array==a[i])] <- temp[[i]]#将累加值附入数组
}
accum<-cbind(array,accum)
return(as.data.frame(accum))
}
accum<-cf(combine)
names(accum)[1]<-"combine"
all<-cbind(all,accum)
all<-merge(all,result[,(ncol(result)-1):(ncol(result))],by="combine")
#已有数小于规划数，标为1，否则为0
all$select[as.numeric(as.character(all$accum))<=all$solution]<-1#因子必须经过双重转化为数值
all$select[as.numeric(as.character(all$accum))>all$solution]<-0
#目标值和规划值对比
myfun<-function(df){
nc<-ncol(result)
df1<-gsub("\\$x","",df) #"//"：转义符，否则$将被视为正则表达式
df2<-gsub("data","result",df1)
df3<-gsub("]",paste(",",nc,"]",sep=""),df2)
return(df3)
}
compare<-quota_limit
compare$plan<-0
compare$gap<-0
for(i in 1:n){
compare[i,3]<-sum(eval(parse(text=myfun(compare[i,1]))))
compare[i,4]<-compare[i,3]-compare[i,2]
}
#结果输出
write.csv(result,"./output/result.csv",row.names = FALSE)
write.csv(compare,"./output/compare.csv",row.names = FALSE)
write.csv(subset(all,select=-c(combine,accum,solution)),"./output/all.csv",row.names = FALSE)#不保留中间列变量
setwd("E:/QD/tools/SPSS标签&框架")
source("E:/快决测/工具/asvar.R")#调用自定义操作符%!%，作用:视为变量而非字符
source("E:/QD/tools/asvar.R")#调用自定义操作符%!%，作用:视为变量而非字符
a<-read.csv("test.csv",header = T)
a[,1]<- as.character(a[,1])
a[,2]<-as.character(a[,2])
#预设数据
b<-data.frame()
c<-data.frame()
make<-data.frame()
tt<-data.frame()
title<-data.frame()
#初步处理
for(i in 1:nrow(a)){
if(substr(a[i,1],1,1) %in% c(seq(1:9))){
b[i,1]<-paste(' ',a[i,1],' "',a[i,2],'"',sep="")
stub[i,1]<-paste(a[i,1],';',a[i,2],';',sep="")
}
else{
b[i,1]<-paste("/",a[i,1],sep="")
c[i,1]<-paste(a[i,1],' "',a[i,2],'"',sep="")
stub[i,1]<-paste("[*data ",a[i,1],"R(;)=",sep="")
tt[i,1]<-paste("[*set q='",a[i,1],"']","\n","  [*for b=1]","\n","  [*for h=1]","\n","    if $bb[b]/nb, then,","\n","      t#[q][&b][h]=$t[q]*$h[h],","\n","      bt='b[b].[Base[b]]',","\n","    endif,","\n","  [*end h]","\n","  [*end b]","\n\n",sep="")
title[i,1]<-paste("VT $T",a[i,1],"='","(",a[i,1],")",a[i,2],"',",sep="")#输出title.stp的
}
}
names(c)[1]<-"VARIABLE LABELS"
xx<-c(grep("^[A-Z]",a[,1]))#获取变量名所在位置
yy<-c(xx[2:length(xx)],nrow(a)+1)#插值
#针对多选题处理
for(i in xx){
if(a[i,3]==1&a[i,4]==0){
b[i,1]<-paste("/",a[i,1],"_1 to ",a[i,1],"_",gap[which(xx==i)],sep="")
assign(paste("z",i,sep=""),paste(rep(a[i,1],gap[which(xx==i)]),'_',seq(1,gap[which(xx==i)]),' "',a[i,2],'"',sep=""))
c[i,1]<-do.call(paste,c(as.list(("z"%!%i)[1:gap[which(xx==i)]]),sep="\n"))
make[i,1]<-paste(a[i,1],";",gap[which(xx==i)],";",sep="")
}
if(a[i,3]==1&a[i,4]!=0){
b[i,1]<-paste("/",a[i,1],"_1 to ",a[i,1],"_",a[i,4],sep="")
assign(paste("z",i,sep=""),paste(rep(a[i,1],a[i,4]),'_',seq(1,a[i,4]),' "',a[i,2],'"',sep=""))
c[i,1]<-do.call(paste,c(as.list(("z"%!%i)[1:a[i,4]]),sep="\n"))
make[i,1]<-paste(a[i,1],";",a[i,4],";",sep="")
}
}
b<-rbind(b,".","EXECUTE.")
c<-subset(c,!is.na(c))
#########################################MR模板#############################################
#1:table
table<-paste("\nstart control,",	"\n* Study  Sheet1",	"\noldnames,tidy,oldwq,charset=double,nolsum,",	"\nc= xx.dat,",	"\no=..\\output\\xxxxx.tab,",	"\nCEP,",	"\nCSV2,",	"\nfinish control,",	"\n",	"\nstart data,",	"\norder 1234567890xv,",	"\nserial number in columns 1-6,card characters binary 39999,",	"\nTEMPORARY/99999/,",	"\n",	"\n",	"\nF=ADF,!DW读小数",	"\n[*insert define.stp]",	"\n[*insert make.stp]",	"\n[*insert stub.stp]",	"\n[*insert base.stp]",	"\n[*insert title.stp]",	"\n",	"\n",	"\nfinish data,",	"\n",	"\nstart tables,",	"\n%JH='Project Sheet1 * * *',",	"\n%TCI='PAGE <&PAG><JR><J+>*TABLE <&TABLEIDENTIFICATION><JL><J+>',",	"\n%PTR='总体', %AVG='Mean<d2>', %MED='Median', %RTV='<d1>',  GLOBAL BT#='All Respondents',",	"\nF=NWFS,",	"\nF=NUPC/NPTC/NPGN/LBR0/UCH/RBL/CLW12/CHG1/RLW25/BAL/PBL/DBL/RHW25/IAT0/IBJ0/IAJ0/IBT12/SHG1/SIG2/PHG1,",	"\nF=NBTS/NBCS/NBRS/SPL1000/NFSL,     !!F=PCS/NPCB/LBR1/UCL,     !!Just for e-Tabs",	"\n!f = PCB / CAZ '0'/CZP'0'/SLA101/SLB101/NPCS/LPP-1/NRBL/NPRC, !F=DPR2,   ! Percentage",	"\n!f = PCB / CAZ '0'/CZP'0'/SLA101/SLB101/NPCS/LPP-1/NRBL/NRTV, !F=DPT2,   ! Frequency",	"\nf=NPCS/PRC/RTV/SLA95/SLB101,                                       ! For HK CSV-Transformer",	"\n!f=SLA95, !Sig Test;",	"\n",	"\n",	"\n",	"\n[*insert tt.stp]",	"\n",	"\n",	"\n",	"\nfinish tables,",sep="")
#2:define
define<-data.frame()
#3:make
make<-subset(make,!is.na(make))
#4:stub
for(i in 1:length(xx)){
stub[yy[i]-1,1]<-paste(stub[yy[i]-1,1],"\n","]","\n","[*set Q='",a[xx[i],1],"']","\n","dm $t[Q]=$[Q]/[*do i=1:[[Q]R.#]/2][[Q]R.i*2-1],[*end i]","\n","   ","r,f,","\n","v $t[Q]='[*do i=1:[[Q]R.#]/2]","\n          ","[[Q]R.i*2] [*sle]**[*end i]","\n          ","**Missing<z>","\n          ","**mmmmm<c><S>',","\n\n",sep="")
}
make<-rbind(c("[*data ttl(;)="),make,"]","[*do i=1:[ttl.#]/2]","      [*do a=1:[ttl.i*2]]","      om $[ttl.i*2-1]=$[ttl.i*2-1]0[a]/1-999,","      [*end a]","[*end i]",sep="")
names(b)[1]<-"VALUE LABELS"
stub<-data.frame()
gap<-yy-xx-1#选项数
c<-rbind(c,".","EXECUTE.")
setwd("E:/QD/tools/SPSS标签&框架")
source("E:/QD/tools/asvar.R")#调用自定义操作符%!%，作用:视为变量而非字符
a<-read.csv("test.csv",header = T)
a[,1]<- as.character(a[,1])
a[,2]<-as.character(a[,2])
#预设数据
b<-data.frame()
c<-data.frame()
make<-data.frame()
stub<-data.frame()
tt<-data.frame()
title<-data.frame()
#初步处理
for(i in 1:nrow(a)){
if(substr(a[i,1],1,1) %in% c(seq(1:9))){
b[i,1]<-paste(' ',a[i,1],' "',a[i,2],'"',sep="")
stub[i,1]<-paste(a[i,1],';',a[i,2],';',sep="")
}
else{
b[i,1]<-paste("/",a[i,1],sep="")
c[i,1]<-paste(a[i,1],' "',a[i,2],'"',sep="")
stub[i,1]<-paste("[*data ",a[i,1],"R(;)=",sep="")
tt[i,1]<-paste("[*set q='",a[i,1],"']","\n","  [*for b=1]","\n","  [*for h=1]","\n","    if $bb[b]/nb, then,","\n","      t#[q][&b][h]=$t[q]*$h[h],","\n","      bt='b[b].[Base[b]]',","\n","    endif,","\n","  [*end h]","\n","  [*end b]","\n\n",sep="")
title[i,1]<-paste("VT $T",a[i,1],"='","(",a[i,1],")",a[i,2],"',",sep="")#输出title.stp的
}
}
names(b)[1]<-"VALUE LABELS"
names(c)[1]<-"VARIABLE LABELS"
xx<-c(grep("^[A-Z]",a[,1]))#获取变量名所在位置
yy<-c(xx[2:length(xx)],nrow(a)+1)#插值
gap<-yy-xx-1#选项数
#针对多选题处理
for(i in xx){
if(a[i,3]==1&a[i,4]==0){
b[i,1]<-paste("/",a[i,1],"_1 to ",a[i,1],"_",gap[which(xx==i)],sep="")
assign(paste("z",i,sep=""),paste(rep(a[i,1],gap[which(xx==i)]),'_',seq(1,gap[which(xx==i)]),' "',a[i,2],'"',sep=""))
c[i,1]<-do.call(paste,c(as.list(("z"%!%i)[1:gap[which(xx==i)]]),sep="\n"))
make[i,1]<-paste(a[i,1],";",gap[which(xx==i)],";",sep="")
}
if(a[i,3]==1&a[i,4]!=0){
b[i,1]<-paste("/",a[i,1],"_1 to ",a[i,1],"_",a[i,4],sep="")
assign(paste("z",i,sep=""),paste(rep(a[i,1],a[i,4]),'_',seq(1,a[i,4]),' "',a[i,2],'"',sep=""))
c[i,1]<-do.call(paste,c(as.list(("z"%!%i)[1:a[i,4]]),sep="\n"))
make[i,1]<-paste(a[i,1],";",a[i,4],";",sep="")
}
}
b<-rbind(b,".","EXECUTE.")
c<-subset(c,!is.na(c))
c<-rbind(c,".","EXECUTE.")
#########################################MR模板#############################################
#1:table
table<-paste("\nstart control,",	"\n* Study  Sheet1",	"\noldnames,tidy,oldwq,charset=double,nolsum,",	"\nc= xx.dat,",	"\no=..\\output\\xxxxx.tab,",	"\nCEP,",	"\nCSV2,",	"\nfinish control,",	"\n",	"\nstart data,",	"\norder 1234567890xv,",	"\nserial number in columns 1-6,card characters binary 39999,",	"\nTEMPORARY/99999/,",	"\n",	"\n",	"\nF=ADF,!DW读小数",	"\n[*insert define.stp]",	"\n[*insert make.stp]",	"\n[*insert stub.stp]",	"\n[*insert base.stp]",	"\n[*insert title.stp]",	"\n",	"\n",	"\nfinish data,",	"\n",	"\nstart tables,",	"\n%JH='Project Sheet1 * * *',",	"\n%TCI='PAGE <&PAG><JR><J+>*TABLE <&TABLEIDENTIFICATION><JL><J+>',",	"\n%PTR='总体', %AVG='Mean<d2>', %MED='Median', %RTV='<d1>',  GLOBAL BT#='All Respondents',",	"\nF=NWFS,",	"\nF=NUPC/NPTC/NPGN/LBR0/UCH/RBL/CLW12/CHG1/RLW25/BAL/PBL/DBL/RHW25/IAT0/IBJ0/IAJ0/IBT12/SHG1/SIG2/PHG1,",	"\nF=NBTS/NBCS/NBRS/SPL1000/NFSL,     !!F=PCS/NPCB/LBR1/UCL,     !!Just for e-Tabs",	"\n!f = PCB / CAZ '0'/CZP'0'/SLA101/SLB101/NPCS/LPP-1/NRBL/NPRC, !F=DPR2,   ! Percentage",	"\n!f = PCB / CAZ '0'/CZP'0'/SLA101/SLB101/NPCS/LPP-1/NRBL/NRTV, !F=DPT2,   ! Frequency",	"\nf=NPCS/PRC/RTV/SLA95/SLB101,                                       ! For HK CSV-Transformer",	"\n!f=SLA95, !Sig Test;",	"\n",	"\n",	"\n",	"\n[*insert tt.stp]",	"\n",	"\n",	"\n",	"\nfinish tables,",sep="")
#2:define
define<-data.frame()
#3:make
make<-subset(make,!is.na(make))
make<-rbind(c("[*data ttl(;)="),make,"]","[*do i=1:[ttl.#]/2]","      [*do a=1:[ttl.i*2]]","      om $[ttl.i*2-1]=$[ttl.i*2-1]0[a]/1-999,","      [*end a]","[*end i]",sep="")
#4:stub
for(i in 1:length(xx)){
stub[yy[i]-1,1]<-paste(stub[yy[i]-1,1],"\n","]","\n","[*set Q='",a[xx[i],1],"']","\n","dm $t[Q]=$[Q]/[*do i=1:[[Q]R.#]/2][[Q]R.i*2-1],[*end i]","\n","   ","r,f,","\n","v $t[Q]='[*do i=1:[[Q]R.#]/2]","\n          ","[[Q]R.i*2] [*sle]**[*end i]","\n          ","**Missing<z>","\n          ","**mmmmm<c><S>',","\n\n",sep="")
}
#5:tt
tt<-subset(tt,!is.na(tt))
#6:base
base<-paste("\n[*data 999(m=p,t=;)=",	"\n1;t;All Respondents",	"\n        ",	"\n]    ",	"\n[*do i=1:[999.#]:3][*set BaseNo=999.i]",	"\n    ds $bb[BaseNo]=[999.i+1],",	"\n    x  $bb[BaseNo]='Base [BaseNo] - [999.i+2]',",	"\n    xt $bb[BaseNo]='Base [BaseNo] - [999.i+2]',",	"\n",	"\n    [*set Base[BaseNo]='[999.i+2]']",	"\n[*end i]",sep="")
#7:title
title<-subset(title,!is.na(title))
header<-paste("\n\n!!HEADER1","\ndm x $h1=",'\n\nt:     "Total***([~1])",','\n\nxt $h1="Header A ",',sep="")
title<-rbind(title,header)
#输出标签
write.csv(b,"./label/VALUE.csv",row.names = F,quote = F)
write.csv(c,"./label/VARIABLE.csv",row.names = F,quote = F)
#输出框架
write.table(table,"./table/table.stp",row.names = F,col.names = F,quote = F)
write.table(define,"./table/define.stp",row.names = F,col.names = F,quote = F)
write.table(stub,"./table/stub.stp",row.names = F,col.names = F,quote = F)
write.table(make,"./table/make.stp",row.names = F,col.names = F,quote = F)
write.table(base,"./table/base.stp",row.names = F,col.names = F,quote = F)
write.table(tt,"./table/tt.stp",row.names = F,col.names = F,quote = F)
write.table(title,"./table/title.stp",row.names = F,col.names = F,quote = F)
setwd("E:/QD/tools/SPSS标签&框架")
source("E:/QD/tools/asvar.R")#调用自定义操作符%!%，作用:视为变量而非字符
a<-read.csv("test.csv",header = T)
a[,1]<- as.character(a[,1])
a[,2]<-as.character(a[,2])
#预设数据
b<-data.frame()
c<-data.frame()
make<-data.frame()
stub<-data.frame()
tt<-data.frame()
title<-data.frame()
#初步处理
for(i in 1:nrow(a)){
if(substr(a[i,1],1,1) %in% c(seq(1:9))){
b[i,1]<-paste(' ',a[i,1],' "',a[i,2],'"',sep="")
stub[i,1]<-paste(a[i,1],';',a[i,2],';',sep="")
}
else{
b[i,1]<-paste("/",a[i,1],sep="")
c[i,1]<-paste(a[i,1],' "',a[i,2],'"',sep="")
stub[i,1]<-paste("[*data ",a[i,1],"R(;)=",sep="")
tt[i,1]<-paste("[*set q='",a[i,1],"']","\n","  [*for b=1]","\n","  [*for h=1]","\n","    if $bb[b]/nb, then,","\n","      t#[q][&b][h]=$t[q]*$h[h],","\n","      bt='b[b].[Base[b]]',","\n","    endif,","\n","  [*end h]","\n","  [*end b]","\n\n",sep="")
title[i,1]<-paste("VT $T",a[i,1],"='","(",a[i,1],")",a[i,2],"',",sep="")#输出title.stp的
}
}
names(b)[1]<-"VALUE LABELS"
names(c)[1]<-"VARIABLE LABELS"
xx<-c(grep("^[A-Z]",a[,1]))#获取变量名所在位置
yy<-c(xx[2:length(xx)],nrow(a)+1)#插值
gap<-yy-xx-1#选项数
#针对多选题处理
for(i in xx){
if(a[i,3]==1&a[i,4]==0){
b[i,1]<-paste("/",a[i,1],"_1 to ",a[i,1],"_",gap[which(xx==i)],sep="")
assign(paste("z",i,sep=""),paste(rep(a[i,1],gap[which(xx==i)]),'_',seq(1,gap[which(xx==i)]),' "',a[i,2],'"',sep=""))
c[i,1]<-do.call(paste,c(as.list(("z"%!%i)[1:gap[which(xx==i)]]),sep="\n"))
make[i,1]<-paste(a[i,1],";",gap[which(xx==i)],";",sep="")
}
if(a[i,3]==1&a[i,4]!=0){
b[i,1]<-paste("/",a[i,1],"_1 to ",a[i,1],"_",a[i,4],sep="")
assign(paste("z",i,sep=""),paste(rep(a[i,1],a[i,4]),'_',seq(1,a[i,4]),' "',a[i,2],'"',sep=""))
c[i,1]<-do.call(paste,c(as.list(("z"%!%i)[1:a[i,4]]),sep="\n"))
make[i,1]<-paste(a[i,1],";",a[i,4],";",sep="")
}
}
b<-rbind(b,".","EXECUTE.")
c<-subset(c,!is.na(c))
c<-rbind(c,".","EXECUTE.")
#########################################MR模板#############################################
#1:table
table<-paste("\nstart control,",	"\n* Study  Sheet1",	"\noldnames,tidy,oldwq,charset=double,nolsum,",	"\nc= xx.dat,",	"\no=..\\output\\xxxxx.tab,",	"\nCEP,",	"\nCSV2,",	"\nfinish control,",	"\n",	"\nstart data,",	"\norder 1234567890xv,",	"\nserial number in columns 1-6,card characters binary 39999,",	"\nTEMPORARY/99999/,",	"\n",	"\n",	"\nF=ADF,!DW读小数",	"\n[*insert define.stp]",	"\n[*insert make.stp]",	"\n[*insert stub.stp]",	"\n[*insert base.stp]",	"\n[*insert title.stp]",	"\n",	"\n",	"\nfinish data,",	"\n",	"\nstart tables,",	"\n%JH='Project Sheet1 * * *',",	"\n%TCI='PAGE <&PAG><JR><J+>*TABLE <&TABLEIDENTIFICATION><JL><J+>',",	"\n%PTR='总体', %AVG='Mean<d2>', %MED='Median', %RTV='<d1>',  GLOBAL BT#='All Respondents',",	"\nF=NWFS,",	"\nF=NUPC/NPTC/NPGN/LBR0/UCH/RBL/CLW12/CHG1/RLW25/BAL/PBL/DBL/RHW25/IAT0/IBJ0/IAJ0/IBT12/SHG1/SIG2/PHG1,",	"\nF=NBTS/NBCS/NBRS/SPL1000/NFSL,     !!F=PCS/NPCB/LBR1/UCL,     !!Just for e-Tabs",	"\n!f = PCB / CAZ '0'/CZP'0'/SLA101/SLB101/NPCS/LPP-1/NRBL/NPRC, !F=DPR2,   ! Percentage",	"\n!f = PCB / CAZ '0'/CZP'0'/SLA101/SLB101/NPCS/LPP-1/NRBL/NRTV, !F=DPT2,   ! Frequency",	"\nf=NPCS/PRC/RTV/SLA95/SLB101,                                       ! For HK CSV-Transformer",	"\n!f=SLA95, !Sig Test;",	"\n",	"\n",	"\n",	"\n[*insert tt.stp]",	"\n",	"\n",	"\n",	"\nfinish tables,",sep="")
#2:define
define<-data.frame()
#3:make
make<-subset(make,!is.na(make))
make<-rbind(c("[*data ttl(;)="),make,"]","[*do i=1:[ttl.#]/2]","      [*do a=1:[ttl.i*2]]","      om $[ttl.i*2-1]=$[ttl.i*2-1]0[a]/1-999,","      [*end a]","[*end i]",sep="")
#4:stub
for(i in 1:length(xx)){
stub[yy[i]-1,1]<-paste(stub[yy[i]-1,1],"\n","]","\n","[*set Q='",a[xx[i],1],"']","\n","dm $t[Q]=$[Q]/[*do i=1:[[Q]R.#]/2][[Q]R.i*2-1],[*end i]","\n","   ","r,f,","\n","v $t[Q]='[*do i=1:[[Q]R.#]/2]","\n          ","[[Q]R.i*2] [*sle]**[*end i]","\n          ","**Missing<z>","\n          ","**mmmmm<c><S>',","\n\n",sep="")
}
#5:tt
tt<-subset(tt,!is.na(tt))
#6:base
base<-paste("\n[*data 999(m=p,t=;)=",	"\n1;t;All Respondents",	"\n        ",	"\n]    ",	"\n[*do i=1:[999.#]:3][*set BaseNo=999.i]",	"\n    ds $bb[BaseNo]=[999.i+1],",	"\n    x  $bb[BaseNo]='Base [BaseNo] - [999.i+2]',",	"\n    xt $bb[BaseNo]='Base [BaseNo] - [999.i+2]',",	"\n",	"\n    [*set Base[BaseNo]='[999.i+2]']",	"\n[*end i]",sep="")
#7:title
title<-subset(title,!is.na(title))
header<-paste("\n\n!!HEADER1","\ndm x $h1=",'\n\nt:     "Total***([~1])",','\n\nxt $h1="Header A ",',sep="")
title<-rbind(title,header)
#输出标签
write.csv(b,"./label/VALUE.csv",row.names = F,quote = F)
write.csv(c,"./label/VARIABLE.csv",row.names = F,quote = F)
#输出框架
write.table(table,"./table/table.stp",row.names = F,col.names = F,quote = F)
write.table(define,"./table/define.stp",row.names = F,col.names = F,quote = F)
write.table(stub,"./table/stub.stp",row.names = F,col.names = F,quote = F)
write.table(make,"./table/make.stp",row.names = F,col.names = F,quote = F)
write.table(base,"./table/base.stp",row.names = F,col.names = F,quote = F)
write.table(tt,"./table/tt.stp",row.names = F,col.names = F,quote = F)
write.table(title,"./table/title.stp",row.names = F,col.names = F,quote = F)
setwd("E:/QD/tools/SPSS_labels&MR_frame")
source("E:/QD/tools/asvar.R")#调用自定义操作符%!%，作用:视为变量而非字符
a<-read.csv("test.csv",header = T)
a[,1]<- as.character(a[,1])
a[,2]<-as.character(a[,2])
#预设数据
b<-data.frame()
c<-data.frame()
make<-data.frame()
stub<-data.frame()
tt<-data.frame()
title<-data.frame()
#初步处理
for(i in 1:nrow(a)){
if(substr(a[i,1],1,1) %in% c(seq(1:9))){
b[i,1]<-paste(' ',a[i,1],' "',a[i,2],'"',sep="")
stub[i,1]<-paste(a[i,1],';',a[i,2],';',sep="")
}
else{
b[i,1]<-paste("/",a[i,1],sep="")
c[i,1]<-paste(a[i,1],' "',a[i,2],'"',sep="")
stub[i,1]<-paste("[*data ",a[i,1],"R(;)=",sep="")
tt[i,1]<-paste("[*set q='",a[i,1],"']","\n","  [*for b=1]","\n","  [*for h=1]","\n","    if $bb[b]/nb, then,","\n","      t#[q][&b][h]=$t[q]*$h[h],","\n","      bt='b[b].[Base[b]]',","\n","    endif,","\n","  [*end h]","\n","  [*end b]","\n\n",sep="")
title[i,1]<-paste("VT $T",a[i,1],"='","(",a[i,1],")",a[i,2],"',",sep="")#输出title.stp的
}
}
names(b)[1]<-"VALUE LABELS"
names(c)[1]<-"VARIABLE LABELS"
xx<-c(grep("^[A-Z]",a[,1]))#获取变量名所在位置
yy<-c(xx[2:length(xx)],nrow(a)+1)#插值
gap<-yy-xx-1#选项数
#针对多选题处理
for(i in xx){
if(a[i,3]==1&a[i,4]==0){
b[i,1]<-paste("/",a[i,1],"_1 to ",a[i,1],"_",gap[which(xx==i)],sep="")
assign(paste("z",i,sep=""),paste(rep(a[i,1],gap[which(xx==i)]),'_',seq(1,gap[which(xx==i)]),' "',a[i,2],'"',sep=""))
c[i,1]<-do.call(paste,c(as.list(("z"%!%i)[1:gap[which(xx==i)]]),sep="\n"))
make[i,1]<-paste(a[i,1],";",gap[which(xx==i)],";",sep="")
}
if(a[i,3]==1&a[i,4]!=0){
b[i,1]<-paste("/",a[i,1],"_1 to ",a[i,1],"_",a[i,4],sep="")
assign(paste("z",i,sep=""),paste(rep(a[i,1],a[i,4]),'_',seq(1,a[i,4]),' "',a[i,2],'"',sep=""))
c[i,1]<-do.call(paste,c(as.list(("z"%!%i)[1:a[i,4]]),sep="\n"))
make[i,1]<-paste(a[i,1],";",a[i,4],";",sep="")
}
}
b<-rbind(b,".","EXECUTE.")
c<-subset(c,!is.na(c))
c<-rbind(c,".","EXECUTE.")
#########################################MR模板#############################################
#1:table
table<-paste("\nstart control,",	"\n* Study  Sheet1",	"\noldnames,tidy,oldwq,charset=double,nolsum,",	"\nc= xx.dat,",	"\no=..\\output\\xxxxx.tab,",	"\nCEP,",	"\nCSV2,",	"\nfinish control,",	"\n",	"\nstart data,",	"\norder 1234567890xv,",	"\nserial number in columns 1-6,card characters binary 39999,",	"\nTEMPORARY/99999/,",	"\n",	"\n",	"\nF=ADF,!DW读小数",	"\n[*insert define.stp]",	"\n[*insert make.stp]",	"\n[*insert stub.stp]",	"\n[*insert base.stp]",	"\n[*insert title.stp]",	"\n",	"\n",	"\nfinish data,",	"\n",	"\nstart tables,",	"\n%JH='Project Sheet1 * * *',",	"\n%TCI='PAGE <&PAG><JR><J+>*TABLE <&TABLEIDENTIFICATION><JL><J+>',",	"\n%PTR='总体', %AVG='Mean<d2>', %MED='Median', %RTV='<d1>',  GLOBAL BT#='All Respondents',",	"\nF=NWFS,",	"\nF=NUPC/NPTC/NPGN/LBR0/UCH/RBL/CLW12/CHG1/RLW25/BAL/PBL/DBL/RHW25/IAT0/IBJ0/IAJ0/IBT12/SHG1/SIG2/PHG1,",	"\nF=NBTS/NBCS/NBRS/SPL1000/NFSL,     !!F=PCS/NPCB/LBR1/UCL,     !!Just for e-Tabs",	"\n!f = PCB / CAZ '0'/CZP'0'/SLA101/SLB101/NPCS/LPP-1/NRBL/NPRC, !F=DPR2,   ! Percentage",	"\n!f = PCB / CAZ '0'/CZP'0'/SLA101/SLB101/NPCS/LPP-1/NRBL/NRTV, !F=DPT2,   ! Frequency",	"\nf=NPCS/PRC/RTV/SLA95/SLB101,                                       ! For HK CSV-Transformer",	"\n!f=SLA95, !Sig Test;",	"\n",	"\n",	"\n",	"\n[*insert tt.stp]",	"\n",	"\n",	"\n",	"\nfinish tables,",sep="")
#2:define
define<-data.frame()
#3:make
make<-subset(make,!is.na(make))
make<-rbind(c("[*data ttl(;)="),make,"]","[*do i=1:[ttl.#]/2]","      [*do a=1:[ttl.i*2]]","      om $[ttl.i*2-1]=$[ttl.i*2-1]0[a]/1-999,","      [*end a]","[*end i]",sep="")
#4:stub
for(i in 1:length(xx)){
stub[yy[i]-1,1]<-paste(stub[yy[i]-1,1],"\n","]","\n","[*set Q='",a[xx[i],1],"']","\n","dm $t[Q]=$[Q]/[*do i=1:[[Q]R.#]/2][[Q]R.i*2-1],[*end i]","\n","   ","r,f,","\n","v $t[Q]='[*do i=1:[[Q]R.#]/2]","\n          ","[[Q]R.i*2] [*sle]**[*end i]","\n          ","**Missing<z>","\n          ","**mmmmm<c><S>',","\n\n",sep="")
}
#5:tt
tt<-subset(tt,!is.na(tt))
#6:base
base<-paste("\n[*data 999(m=p,t=;)=",	"\n1;t;All Respondents",	"\n        ",	"\n]    ",	"\n[*do i=1:[999.#]:3][*set BaseNo=999.i]",	"\n    ds $bb[BaseNo]=[999.i+1],",	"\n    x  $bb[BaseNo]='Base [BaseNo] - [999.i+2]',",	"\n    xt $bb[BaseNo]='Base [BaseNo] - [999.i+2]',",	"\n",	"\n    [*set Base[BaseNo]='[999.i+2]']",	"\n[*end i]",sep="")
#7:title
title<-subset(title,!is.na(title))
header<-paste("\n\n!!HEADER1","\ndm x $h1=",'\n\nt:     "Total***([~1])",','\n\nxt $h1="Header A ",',sep="")
title<-rbind(title,header)
#输出标签
write.csv(b,"./label/VALUE.csv",row.names = F,quote = F)
write.csv(c,"./label/VARIABLE.csv",row.names = F,quote = F)
#输出框架
write.table(table,"./table/table.stp",row.names = F,col.names = F,quote = F)
